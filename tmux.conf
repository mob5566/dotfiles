# improve colors
set -g default-terminal 'screen-256color'

# act like vim
setw -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

if-shell -b '[ $(echo "$(tmux -V | grep -oE '[[:digit:].]+') >= 2.4" | bc) -eq 1 ]' '\
    bind -T copy-mode-vi "v" send -X begin-selection; \
    bind -T copy-mode-vi "V" send -X rectangle-toggle; \
    ' '\
    bind -t vi-copy "v" begin-selection; \
    bind -t vi-copy "V" rectangle-toggle; \
    '

# act like GNU screen
unbind C-b
set -g prefix C-a
bind a send-prefix
bind b send-prefix

# create new windows/panes in same directory
if-shell -b '[ $(echo "$(tmux -V | grep -oE '[[:digit:].]+') >= 1.9" | bc) -eq 1 ]' '\
    bind c new-window -c "#{pane_current_path}"; \
    bind "\"" split-window -c "#{pane_current_path}"; \
    bind % split-window -h -c "#{pane_current_path}"; \
    '

# enable and disable keyboard input for panes
if-shell -b '[ $(echo "$(tmux -V | grep -oE '[[:digit:].]+') >= 2.0" | bc) -eq 1 ]' '\
    bind < select-pane -d \; display-message "input disabled"; \
    bind > select-pane -e \; display-message "input enabled"; \
    '

# size windows based on clients looking at that window
setw -g aggressive-resize on

# enable mouse control
if-shell -b '[ $(echo "$(tmux -V | grep -oE '[[:digit:].]+') >= 2.1" | bc) -eq 1 ]' '\
    set -g mouse on;'

if-shell -b '[ $(echo "$(tmux -V | grep -oE '[[:digit:].]+') <= 3.0" | bc) -eq 1 ]' '\
    set -g mouse-select-window on; \
    set -g mouse-select-pane on; \
    set -g mouse-resize-pane on; \
    '

# start window numbers at 1 to match keyboard order with tmux order
set -g base-index 1

# start pane numbers at 1 to match keyboard order with tmux order
setw -g pane-base-index 1

# easy resizing of panes
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r H resize-pane -L 5
bind -r L resize-pane -R 5

# reenable automatic renaming for the current window
bind N setw automatic-rename on \; display-message "automatic rename enabled"

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# monitor windows for activity
setw -g monitor-activity on

# don't wait for escape sequences
set -sg escape-time 0

# display pane numbers for longer
set -g display-panes-time 2000

# use tmuxline from vim as statusline
if-shell "test -f ~/.tmuxline.conf" "source ~/.tmuxline.conf"

# increase scrollback lines
set -g history-limit 65536

# keybinding to clear history
bind C-k clear-history \; display-message "history cleared"

# C-b ! breaks current pane into separate window
# join a pane/window from the current session into the current window
bind @ command-prompt -p "create pane from:" "join-pane -s ':%%'"

# reload the .tmux.conf file with R
bind R source-file ~/.tmux.conf \; display-message "configuration reloaded"

# toggle passthrough of prefix
bind P if-shell "[ \"$(tmux show-options -g prefix)\" = \"prefix C-a\" ]" 'set -g prefix C-b; display-message "passthrough enabled"; refresh-client -S' 'set -g prefix C-a; display-message "passthrough disabled"; refresh-client -S'

# tpm plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-logging'

# initialize TMUX plugin manager
run '~/.tmux/plugins/tpm/tpm'

# Allow local customization in ~/.tmux_local.conf
if-shell "[ -f ~/.tmux_local.conf ]" 'source ~/.tmux_local.conf'
